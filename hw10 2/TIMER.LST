8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE TIMER.ASM M1 EP DB


LOC  OBJ                  LINE     SOURCE

                             1     NAME    TIMER
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    TIMER                                   ;
                             6     ;                         RoboTrike Timer Event Handler                      ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     ; Description:       This program includes the routines for the RoboTrike
                            12     ;                    timer event handler. The public functions included are:
                            13     ;                        InitTimer2           - initializes timer 0
                            14     ;                        Timer2EventHandler   - in response to the timer 0
                            15     ;                                               interrupt, the event handler
                            16     ;                                               calls on the keyscan function
                            17     ;                                               from keypad.asm
                            18     ;                        InstallTimer2Handler - installs the timer 0 handler
                            19     ;
                            20     ; Revision History:
                            21     ;     11/01/15  Nancy Cao         initial revision
                            22     ;     11/03/15  Nancy Cao         updated comments
                            23     ;     11/05/15  Nancy Cao         updated comments
                            24     ;     11/08/15  Nancy Cao         updated code/comments for keypad
                            25     ;     11/12/15  Nancy Cao         moved install timer 2 handler from interrupt
                            26     ;                                 file and updated comments
                            27     ;     12/28/15  Nancy Cao         altered names and constants for timer 0
                            28     ;                                 instead of timer 2
                            29     
                            30     ; local include files
                            31 +1  $INCLUDE(TIMER.INC)        ; display constants for timers
                      =1    32     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    33     ;                                                                            ;
                      =1    34     ;                                  TIMER.INC                                 ;
                      =1    35     ;                              Timer Definitions                             ;
                      =1    36     ;                                 Include File                               ;
                      =1    37     ;                                                                            ;
                      =1    38     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    39     
                      =1    40     ; This file contains the definitions for the timer 0 functions.
                      =1    41     ;
                      =1    42     ; Revision History:
                      =1    43     ;     11/01/15   Nancy Cao      initial revisions and comments
                      =1    44     ;     11/12/15   Nancy Cao      removed some constants and updated comments
                      =1    45     ;     12/28/15   Nancy Cao      updated for timer 0
                      =1    46     
                      =1    47     ; Interrupt Vectors
                      =1    48     
  0008                =1    49     Tmr0Vec         EQU     8               ;interrupt vector for Timer 0
                      =1    50     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    51     ; definitions
                      =1    52     
  FF32                =1    53     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  0001                =1    54     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1    55                                             ;000000000000----  reserved
                      =1    56                                             ;------------0---  enable timer interrupt
                      =1    57                                             ;-------------001  timer priority
  0008                =1    58     TimerEOI        EQU     00008H          ;Timer EOI command (same for all timers)
  FF56                =1    59     Tmr0Ctrl        EQU     0FF56H          ;address of Timer 0 Control Register
  FF52                =1    60     Tmr0MaxCnt      EQU     0FF52H          ;address of Timer 0 Max Count A Register
  FF50                =1    61     Tmr0Count       EQU     0FF50H          ;address of Timer 0 Count Register
  E009                =1    62     Tmr0CtrlVal     EQU     0E009H          ;value to write to Timer 0 Control Register
                      =1    63                                             ;1---------------  enable timer
                      =1    64                                             ;-1--------------  write to control
                      =1    65                                             ;--1-------------  enable interrupts
                      =1    66                                             ;----000000------  reserved
                      =1    67                                             ;---0------0-----  read only
                      =1    68                                             ;-----------0----  TMRIN0 is an enable
                      =1    69                                             ;------------10--  count timer 2 outs
                      =1    70                                             ;--------------0-  single counter mode
  0900                =1    71     COUNTS_PER_MS   EQU     2304            ;number of timer counts per 1 ms (assumes 18.
                                   432 MHz clock)
                            72 +1  $INCLUDE(INTER.INC)        ; display constants for interrupts
                      =1    73     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    74     ;                                                                            ;
                      =1    75     ;                                  INTER.INC                                 ;
                      =1    76     ;                            Interrupt Definitions                           ;
                      =1    77     ;                                Include File                                ;
                      =1    78     ;                                                                            ;
                      =1    79     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    80     
                      =1    81     ; This file contains the definitions for the interrupt functions.
                      =1    82     ;
                      =1    83     ; Revision History:
                      =1    84     ;     11/17/15   Nancy Cao      initial revisions and comments
                      =1    85     
                      =1    86     ; General Definitions
                      =1    87     
  0001                =1    88     FIRST_RESERVED_VEC      EQU     1               ;reserve vectors 1-3
  0003                =1    89     LAST_RESERVED_VEC       EQU     3
  0100                =1    90     NUM_IRQ_VECTORS     EQU     256         ;number of interrupt vectors
  0004                =1    91     VECTOR_SIZE         EQU 4               ; the size of a vector
  0002                =1    92     BYTE_SIZE           EQU 2               ; the size of a byte
  0100                =1    93     TOTAL_VECTOR_NUM    EQU 256             ; the number of vectors to initialize
                      =1    94     
                      =1    95     ; Addresses
                      =1    96     
                      =1    97     ; Register Values
                      =1    98     
  FF22                =1    99     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
  8000                =1   100     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                           101     
                           102     EXTRN MotorEventHandler:NEAR ; handles motor on/off, motor direction and laser
                           103                                  ; on/off using pulse modulation
                           104     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           105     
                           106     CGROUP  GROUP   CODE
                           107     
                           108     
----                       109     CODE    SEGMENT PUBLIC 'CODE'
                           110     
                           111     
                           112             ASSUME  CS:CGROUP
                           113     
                           114     ; Timer0EventHandler
                           115     ; 
                           116     ; Description: This function reacts to the timer 0 interrupt and calls on the
                           117     ;              multiplex function to determine which digit to display next. It
                           118     ;              then sends the EOI to the interrupt controller and timer
                           119     ;              (COUNTS_PER_MS).
                           120     ;
                           121     ; Operation:   This function simply calls Multiplex, which will write to the
                           122     ;              actual display. Afterwards, it will send the EOI to the interrupt
                           123     ;              controller and to timer 0, then send timer 0 to the interrupt.
                           124     ;
                           125     ; Arguments: None
                           126     ; Return Value: None.
                           127     ; Local Variables: None.
                           128     ; Shared Variables: None.
                           129     ; Global Variables: None.
                           130     ;
                           131     ; Input: None.
                           132     ; Output: EOI.
                           133     ;
                           134     ; Error Handling: None.
                           135     ;
                           136     ; Limitations: None.
                           137     ;
                           138     ; Algorithms: None.
                           139     ; Data Structures: None.
                           140     ;
                           141     ; Registers Changed: None.
                           142     ;
                           143     ; Author: Nancy Cao
                           144     ; Revision History:
                           145     ;     10/27/15  Nancy Cao        initial comments and pseudocode
                           146     ;     10/31/15  Nancy Cao        initial revision
                           147     ;     11/08/15  Nancy Cao        updated code for keypad
                           148     ;     12/28/15  Nancy Cao        changed to timer 0 for motors
                           149     ;
                           150     
0000                       151     Timer0EventHandler  PROC        NEAR
                           152                         PUBLIC      Timer0EventHandler
                           153                        
0000 60                    154         PUSHA                        ; save current values in registers in stack
                           155     
0001 E80000         E      156         CALL    MotorEventHandler    ; figures out direction for every motor. Also
                           157                                      ; whether motors/laser should be on/off
                           158     
0004 BA22FF                159         MOV     DX, INTCtrlrEOI      ; send the EOI to the interrupt controller
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    4


LOC  OBJ                  LINE     SOURCE

0007 B80800                160         MOV     AX, TimerEOI         ; send the EOI to the timer
000A EE                    161         OUT     DX, AL               ; send timer to the interrupt
                           162     
000B 61                    163         POPA                         ; retrieve saved values in stack to registers
                           164         
000C CF                    165         IRET                         ;and return for event handlers
                           166     
                           167     Timer0EventHandler       ENDP
                           168     
                           169     ; InitTimer0
                           170     ;
                           171     ; Description:       Initialize the 80188 Timer 0.  The timer 0 is initialized
                           172     ;                    to generate interrupts every COUNTS_PER_MS.
                           173     ;                    The interrupt controller is also initialized to allow the
                           174     ;                    timer 0 interrupts.  Timer #0 is used to prescale the
                           175     ;                    internal clock from 2.304 MHz to 1 KHz.
                           176     ;
                           177     ; Operation:         The appropriate values are written to the timer control
                           178     ;                    registers in the PCB.  Also, the timer count registers
                           179     ;                    are reset to zero.  Finally, the interrupt controller is
                           180     ;                    setup to accept timer interrupts and any pending
                           181     ;                    interrupts are cleared by sending a TimerEOI to the
                           182     ;                    interrupt controller.
                           183     ;
                           184     ; Arguments:         None.
                           185     ; Return Value:      None.
                           186     ;
                           187     ; Local Variables:   None.
                           188     ; Shared Variables:  None.
                           189     ; Global Variables:  None.
                           190     ;
                           191     ; Input:             None.
                           192     ; Output:            Timer0config
                           193     ;
                           194     ; Error Handling:    None.
                           195     ;
                           196     ; Algorithms:        None.
                           197     ; Data Structures:   None.
                           198     ;
                           199     ; Registers Changed: AX, DX
                           200     ;
                           201     ; Author:            Nancy Cao
                           202     ; Revision History:
                           203     ;     11/01/15  Nancy Cao   initial revision and comments
                           204     ;     11/05/15  Nancy Cao   updated comments
                           205     ;     12/28/15  Nancy Cao   updated to user timer 0 for motors
                           206     
000D                       207     InitTimer0   PROC        NEAR 
                           208                  PUBLIC      InitTimer0
                           209     
000D BA50FF                210             MOV     DX, Tmr0Count   ;initialize the count register to Tmr2Count
0010 33C0                  211             XOR     AX, AX
0012 EE                    212             OUT     DX, AL
                           213     
0013 BA52FF                214             MOV     DX, Tmr0MaxCnt  ;setup max count for 1ms counts
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    5


LOC  OBJ                  LINE     SOURCE

0016 B80009                215             MOV     AX, COUNTS_PER_MS
0019 EE                    216             OUT     DX, AL
                           217     
001A BA56FF                218             MOV     DX, Tmr0Ctrl    ;setup the control register with interrupts
001D B809E0                219             MOV     AX, Tmr0CtrlVal
0020 EE                    220             OUT     DX, AL
                           221     
                           222                                     ;initialize interrupt controller for timers
0021 BA32FF                223             MOV     DX, INTCtrlrCtrl;setup the interrupt control register
0024 B80100                224             MOV     AX, INTCtrlrCVal
0027 EE                    225             OUT     DX, AL
                           226     
0028 BA22FF                227             MOV     DX, INTCtrlrEOI ;send a timer EOI (to clear out controller)
002B B80800                228             MOV     AX, TimerEOI
002E EE                    229             OUT     DX, AL
                           230     
                           231     
002F C3                    232             RET                     ;done so return
                           233     
                           234     
                           235     InitTimer0      ENDP
                           236     
                           237     ; InstallTimer2Handler
                           238     ;
                           239     ; Description:       Install the event handler for the timer 0 interrupt.
                           240     ;
                           241     ; Operation:         Writes the address of the timer 0 event handler to the
                           242     ;                    appropriate interrupt vector.
                           243     ;
                           244     ; Arguments:         None.
                           245     ; Return Value:      None.
                           246     ;
                           247     ; Local Variables:   None.
                           248     ; Shared Variables:  None.
                           249     ; Global Variables:  None.
                           250     ;
                           251     ; Input:             None.
                           252     ; Output:            None.
                           253     ;
                           254     ; Error Handling:    None.
                           255     ;
                           256     ; Algorithms:        None.
                           257     ; Data Structures:   None.
                           258     ;
                           259     ; Registers Changed: flags, AX, ES
                           260     ;
                           261     ; Author:            Nancy Cao
                           262     ; Revision History:
                           263     ;     11/01/15  Nancy Cao   initial revision and comments
                           264     ;     11/05/15  Nancy Cao   updated comments
                           265     ;     11/12/15  Nancy Cao   updated comments
                           266     ;     12/28/15  Nancy Cao   updated to use timer 0 for motors
                           267     
0030                       268     InstallTimer0Handler  PROC    NEAR
                           269                           PUBLIC  InstallTimer0Handler
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    20:25:13  01/07/;6  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           270     
0030 33C0                  271         XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
0032 8EC0                  272         MOV     ES, AX
                           273                                     ;store the vector
0034 26C70620000000 R      274         MOV     ES: WORD PTR (VECTOR_SIZE * Tmr0Vec), OFFSET(Timer0EventHandler)
003B 26C7062200---- R      275         MOV     ES: WORD PTR (VECTOR_SIZE * Tmr0Vec + BYTE_SIZE), SEG(Timer0EventHandler)
                           276     
                           277     
0042 C3                    278         RET                     ;all done, return
                           279     
                           280     
                           281     InstallTimer0Handler  ENDP
                           282     
----                       283     CODE ENDS
                           284     
                           285     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
